{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/postReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","actions/postActions.js","components/home/EditPostModalPopup.js","components/home/MemorablePost.js","components/home/PostCards.js","components/home/CreatePost.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","window","location","href","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","loading","showModal","editPostId","posts","combineReducers","auth","state","action","errors","post","filter","el","_id","console","log","shouldShowModal","postId","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navbar","e","preventDefault","this","props","authLinks","className","onClick","onLogoutClick","bind","src","avatar","alt","style","width","marginRight","title","guestLinks","to","data-toggle","data-target","id","Component","connect","Footer","Date","getFullYear","Landing","history","push","TextFieldGroup","name","placeholder","error","label","info","onChange","disabled","classnames","defaultProps","Register","email","password","password2","onSubmit","setState","target","nextProps","newUser","registeruser","noValidate","userData","then","res","catch","err","response","data","withRouter","Login","loginUser","setItem","jwt_decode","getCurrentUsersPosts","setPostsLoading","get","PostCards","editedPost","elem","postContent","postHeader","postMood","happy","sad","funny","tired","bored","love","blessed","crying","angry","calm","postHashtags","memorablePost","memorablePostChange","handleHashtagsChange","stopPropagation","editPost","postDate","onHide","checked","nextState","Modal","aria-labelledby","Header","closeButton","Title","Body","editor","ClassicEditor","event","getData","padding","paddingTop","marginBottom","inputProps","updatedData","put","MemorablePost","margin","deletePost","EditPostModalPopup","show","size","map","date","Intl","DateTimeFormat","year","month","day","formatToParts","key","minWidth","float","cursor","paddingLeft","height","viewBox","fill","xmlns","fillRule","d","config","toolbar","i","borderRadius","delete","CreatePost","postHeaderChange","postContentChange","createPost","display","postData","Home","jwtToken","currentTime","now","exp","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.542c7465.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        // apply to every request\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete the auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n// Register User\r\n\r\nexport const registeruser = (userData, history) => (dispatch) => {\r\n    axios\r\n        .post(\"/api/users/signup\", userData)\r\n        .then((res) => {\r\n            history.push(\"/login\");\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data,\r\n            });\r\n        });\r\n};\r\n\r\n// Login user - get user token\r\n\r\nexport const loginUser = (userData) => (dispatch) => {\r\n    axios\r\n        .post(\"/api/users/signin\", userData)\r\n        .then((res) => {\r\n            // save to localstorage\r\n            const { token } = res.data;\r\n\r\n            //set token to localstorage\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // set token to auth header\r\n            setAuthToken(token);\r\n\r\n            //decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            //set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data,\r\n            });\r\n        });\r\n};\r\n\r\n// set logged in user`\r\n\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded,\r\n    };\r\n};\r\n\r\n// log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n    // remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    //remove auth header for future requests\r\n    setAuthToken(false);\r\n    // set current user to empty object {} which will set authenticaled to false\r\n    dispatch(setCurrentUser({}));\r\n    window.location.href = \"/login\";\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_CURRENT_USER_POSTS = \"GET_CURRENT_USER_POSTS\";\r\nexport const POSTS_LOADING = \"POSTS_LOADING\";\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\";\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const EDIT_POST = \"EDIT_POST\";\r\nexport const SHOW_MODAL = \"SHOW_MODAL\";\r\n","const isEmpty = (value) =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n    (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\nimport isEmpty from \"../validation/is-empty\";\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_CURRENT_USER_POSTS,\r\n    POSTS_LOADING,\r\n    CREATE_POST,\r\n    DELETE_POST,\r\n    EDIT_POST,\r\n    SHOW_MODAL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    showModal: false,\r\n    editPostId: null,\r\n    posts: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case POSTS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case GET_CURRENT_USER_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false,\r\n            };\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, action.payload],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((el) => el._id !== action.payload),\r\n            };\r\n        case EDIT_POST:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter((el) => el._id !== action.payload._id), action.payload],\r\n            };\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                showModal: action.payload.shouldShowModal,\r\n                editPostId: action.payload.postId,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    post: postReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n\r\n// ,\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nclass Navbar extends Component {\r\n    onLogoutClick(e) {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, user } = this.props.auth;\r\n\r\n        const authLinks = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/home\">\r\n                        Home\r\n                    </Link>\r\n                </li> */}\r\n                <li className=\"nav-item\">\r\n                    <a href=\"\" onClick={this.onLogoutClick.bind(this)} className=\"nav-link\">\r\n                        <img\r\n                            src={user.avatar}\r\n                            alt=\"not found\"\r\n                            className=\"rounded-circle\"\r\n                            style={{ width: \"25px\", marginRight: \"5px\" }}\r\n                            title=\"You must have a gravatar connected to youe email to display image\"\r\n                        />\r\n                        Logout\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        );\r\n\r\n        const guestLinks = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/register\">\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-cust \">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        J O U R N A L\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                        {/* <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"profiles.html\">\r\n                                    {\" \"}\r\n                                    Journals\r\n                                </a>\r\n                            </li>\r\n                        </ul> */}\r\n\r\n                        {isAuthenticated ? authLinks : guestLinks}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(Navbar);\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"bg-dark text-white p-2 text-center\">\r\n                Copyright &copy; {new Date().getFullYear()} Journal\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/home\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">J O U R N A L</h1>\r\n                                <p className=\"lead\">\r\n                                    {\" \"}\r\n                                    This is your life - Lets keep a track of it and lets make it memorable day by day\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({ name, placeholder, value, label, error, info, type, onChange, disabled }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type={type}\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error,\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                name={name}\r\n                disabled={disabled}\r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string,\r\n    info: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.string,\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n    type: \"text\",\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registeruser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {},\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/home\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n        };\r\n\r\n        this.props.registeruser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"auth-pages\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"landing\">\r\n                                <div className=\"dark-overlay landing-inner text-light\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12 text-center\">\r\n                                                <h1 className=\"display-3 mb-4\">J O U R N A L</h1>\r\n                                                <p className=\"lead\">\r\n                                                    {\" \"}\r\n                                                    This is your life - Lets keep a track of it and lets make it\r\n                                                    memorable day by day\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                                <p className=\"lead text-center\">Create your Journal account</p>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <TextFieldGroup\r\n                                        type=\"text\"\r\n                                        error={errors.name}\r\n                                        placeholder=\"Name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.onChange}\r\n                                        name=\"name\"\r\n                                    />\r\n                                    <small className=\"form-text text-muted\">\r\n                                        This site uses Gravatar so if you want a profile image, use a Gravatar email\r\n                                    </small>\r\n                                    <TextFieldGroup\r\n                                        type=\"email\"\r\n                                        error={errors.email}\r\n                                        placeholder=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n\r\n                                    <TextFieldGroup\r\n                                        type=\"password\"\r\n                                        error={errors.password}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    <TextFieldGroup\r\n                                        type=\"password\"\r\n                                        error={errors.password2}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"password2\"\r\n                                        value={this.state.password2}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registeruser })(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {},\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/home\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/home\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n\r\n        this.props.loginUser(userData);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"auth-pages\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"landing\">\r\n                                <div className=\"dark-overlay landing-inner text-light\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12 text-center\">\r\n                                                <h1 className=\"display-3 mb-4\">J O U R N A L</h1>\r\n                                                <p className=\"lead\">\r\n                                                    {\" \"}\r\n                                                    This is your life - Lets keep a track of it and lets make it\r\n                                                    memorable day by day\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h1 className=\"display-4 text-center\">Log In</h1>\r\n                                <p className=\"lead text-center\">Sign in to your Journal account</p>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <TextFieldGroup\r\n                                        type=\"email\"\r\n                                        error={errors.email}\r\n                                        placeholder=\"Email Address\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChange}\r\n                                        name=\"email\"\r\n                                    />\r\n                                    <TextFieldGroup\r\n                                        type=\"password\"\r\n                                        error={errors.password}\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                        name=\"password\"\r\n                                    />\r\n                                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import axios from \"axios\";\r\nimport { GET_CURRENT_USER_POSTS, POSTS_LOADING, CREATE_POST, DELETE_POST, EDIT_POST, SHOW_MODAL } from \"./types\";\r\n\r\n// Get Current Users POSTS_LOADING\r\nexport const getCurrentUsersPosts = () => (dispatch) => {\r\n    dispatch(setPostsLoading());\r\n    axios\r\n        .get(\"/api/posts\")\r\n        .then((res) => {\r\n            dispatch({\r\n                type: GET_CURRENT_USER_POSTS,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: GET_CURRENT_USER_POSTS,\r\n                payload: {},\r\n            });\r\n        });\r\n};\r\n\r\n// Create a new Post\r\nexport const createPost = (postData) => (dispatch) => {\r\n    axios\r\n        .post(\"/api/posts\", postData)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: CREATE_POST,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CREATE_POST,\r\n                payload: {},\r\n            });\r\n        });\r\n};\r\n\r\n// edit a post\r\nexport const editPost = (id, updatedData) => (dispatch) => {\r\n    axios\r\n        .put(`/api/posts/${id}`, updatedData)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: EDIT_POST,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: EDIT_POST,\r\n                payload: {},\r\n            });\r\n        });\r\n};\r\n\r\n// delete a post\r\nexport const deletePost = (id) => (dispatch) => {\r\n    axios\r\n        .delete(`/api/posts/${id}`)\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: {},\r\n            });\r\n        });\r\n};\r\n\r\nexport const shouldShowModal = (shouldShowModal, postId) => (dispatch) => {\r\n    return dispatch({\r\n        type: SHOW_MODAL,\r\n        payload: { shouldShowModal, postId },\r\n    });\r\n};\r\n\r\n// posts Loading\r\nexport const setPostsLoading = () => {\r\n    return {\r\n        type: POSTS_LOADING,\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentUsersPosts, editPost } from \"../../actions/postActions\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\r\n\r\nclass PostCards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const editedPost =\r\n            (props.posts &&\r\n                props.editPostId &&\r\n                props.posts.filter((elem) => {\r\n                    return elem._id === props.editPostId;\r\n                })[0]) ||\r\n            \"\";\r\n\r\n        this.state = {\r\n            posts: [],\r\n            postId: editedPost._id || \"\",\r\n            postContent: editedPost.postContent || \"\",\r\n            postHeader: editedPost.postHeader || \"\",\r\n            postMood: editedPost.postMood || {\r\n                happy: false,\r\n                sad: false,\r\n                funny: false,\r\n                tired: false,\r\n                bored: false,\r\n                love: false,\r\n                blessed: false,\r\n                crying: false,\r\n                angry: false,\r\n                calm: false,\r\n            },\r\n            postHashtags: editedPost.postHashtags || [],\r\n            memorablePost: editedPost.memorablePost || false,\r\n            // modalShow: false,\r\n        };\r\n\r\n        console.log(\"STATE : \", this.state);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.memorablePostChange = this.memorablePostChange.bind(this);\r\n        this.handleHashtagsChange = this.handleHashtagsChange.bind(this);\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.stopPropagation();\r\n        this.props.editPost(this.state.postId, {\r\n            postHeader: this.state.postHeader,\r\n            postContent: this.state.postContent,\r\n            postMood: this.state.postMood,\r\n            postHashtags: this.state.postHashtags,\r\n            memorablePost: this.state.memorablePost,\r\n            postDate: new Date(),\r\n        });\r\n        this.props.onHide();\r\n        console.log(this.state.postContent, \"form submitted\");\r\n    }\r\n\r\n    onChange(e) {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            postHeader: e.target.value,\r\n        });\r\n    }\r\n\r\n    memorablePostChange(e) {\r\n        console.log(\"$$$$$$$$\", e.target.checked);\r\n        this.setState({\r\n            memorablePost: e.target.checked,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(nextProps, nextState) {\r\n        // console.log(\"compnentDidUpdate : \", nextProps, nextState);\r\n        console.log(nextProps.editPostId, this.state.postId);\r\n\r\n        const editedPost =\r\n            (nextProps.posts &&\r\n                nextProps.editPostId &&\r\n                nextProps.posts.filter((elem) => {\r\n                    return elem._id === nextProps.editPostId;\r\n                })[0]) ||\r\n            \"\";\r\n\r\n        if (editedPost) {\r\n            console.log(nextProps.editPostId, this.state.postId);\r\n            if (nextProps.editPostId !== this.state.postId)\r\n                return this.setState({\r\n                    postId: editedPost._id,\r\n                    postHeader: editedPost.postHeader,\r\n                    postContent: editedPost.postContent,\r\n                    postMood: editedPost.postMood,\r\n                    postHashtags: editedPost.postHashtags,\r\n                    memorablePost: editedPost.memorablePost,\r\n                });\r\n        }\r\n    }\r\n\r\n    handleHashtagsChange(postHashtags) {\r\n        this.setState({ postHashtags });\r\n    }\r\n\r\n    inputProps() {\r\n        return {\r\n            placeholder: \"Hashtags\",\r\n        };\r\n    }\r\n\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     console.log(\"--------------\");\r\n    //     const editedPost =\r\n    //         (props.posts &&\r\n    //             props.editPostId &&\r\n    //             props.posts.filter((elem) => {\r\n    //                 return elem._id === props.editPostId;\r\n    //             })[0]) ||\r\n    //         \"\";\r\n\r\n    //     if (state.postHeader) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (editedPost) {\r\n    //         return {\r\n    //             postId: editedPost._id,\r\n    //             postHeader: editedPost.postHeader,\r\n    //             postContent: editedPost.postContent,\r\n    //             postMood: editedPost.postMood,\r\n    //             postHashtags: editedPost.postHashtags,\r\n    //             memorablePost: editedPost.memorablePost,\r\n    //         };\r\n    //     }\r\n    //     console.log(props, state);\r\n    // }\r\n\r\n    render() {\r\n        const editedPost =\r\n            (this.props.posts &&\r\n                this.props.editPostId &&\r\n                this.props.posts.filter((elem) => {\r\n                    return elem._id === this.props.editPostId;\r\n                })[0]) ||\r\n            \"\";\r\n\r\n        // if (editedPost) {\r\n        //     this.setState({\r\n        //         postHeader: editedPost.postHeader,\r\n        //     });\r\n        // }\r\n\r\n        return (\r\n            <Modal {...this.props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        <h5 className=\"alert alert-danger\">Past is Past!! Try not to change it</h5>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    {editedPost && (\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.postHeader}\r\n                                className=\"form-control form-control-lg\"\r\n                                onChange={this.onChange}\r\n                                name=\"postHeader\"\r\n                            />\r\n                            <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={editedPost.postContent}\r\n                                onChange={(event, editor) => {\r\n                                    const data = editor.getData();\r\n                                    this.setState({\r\n                                        postContent: data,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <div className=\"row\" style={{ padding: \"15px 0\" }}>\r\n                                <div className=\"col-sm-12\" style={{ paddingTop: \"6px\", marginBottom: \"15px\" }}>\r\n                                    <TagsInput\r\n                                        value={this.state.postHashtags}\r\n                                        onChange={this.handleHashtagsChange}\r\n                                        inputProps={this.inputProps()}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-sm-2\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        checked={this.state.memorablePost}\r\n                                        onChange={this.memorablePostChange}\r\n                                        name=\"memorablePost\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-sm-10\" style={{ paddingTop: \"6px\" }}>\r\n                                    <h4>Was today a memorable Day ?</h4>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {this.state.postHeader && this.state.postContent && (\r\n                        <button type=\"submit\" className=\"btn save-btn\" onClick={this.onSubmit}>\r\n                            Save\r\n                        </button>\r\n                    )}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    posts: state.post.posts,\r\n    editPostId: state.post.editPostId,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentUsersPosts, editPost })(PostCards);\r\n","import React from \"react\";\r\n\r\nconst MemorablePost = (props) => {\r\n    if (props.memorablePost) {\r\n        return (\r\n            <span className=\"badge badge-pill badge-success\" style={{ margin: \"7px\" }}>\r\n                Memorable Day\r\n            </span>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default MemorablePost;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentUsersPosts, shouldShowModal } from \"../../actions/postActions\";\r\nimport { deletePost } from \"../../actions/postActions\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport EditPostModalPopup from \"./EditPostModalPopup\";\r\nimport MemorablePost from \"./MemorablePost\";\r\n// import ModalDialog from \"react-bootstrap/ModalDialog\";\r\n// import Modal from \"react-bootstrap/Modal\";\r\n// import ModalHeader from \"react-bootstrap/ModalHeader\";\r\n// import ModalBody from \"react-bootstrap/ModalBody\";\r\n\r\nclass PostCards extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            posts: [],\r\n            showModal: false,\r\n        };\r\n\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.editPost = this.editPost.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCurrentUsersPosts();\r\n    }\r\n\r\n    deletePost(postId) {\r\n        this.props.deletePost(postId);\r\n    }\r\n\r\n    editPost(postId) {\r\n        this.props.shouldShowModal(true, postId);\r\n        this.props.getCurrentUsersPosts();\r\n        console.log(this.props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <EditPostModalPopup\r\n                    show={this.props.showModal}\r\n                    size=\"lg\"\r\n                    onHide={() => this.props.shouldShowModal(false)}\r\n                />\r\n                {this.props.posts &&\r\n                    this.props.posts.length &&\r\n                    this.props.posts.map((post) => {\r\n                        const date = new Date(post.postDate);\r\n                        const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\r\n                            year: \"numeric\",\r\n                            month: \"short\",\r\n                            day: \"2-digit\",\r\n                        });\r\n                        const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(\r\n                            date\r\n                        );\r\n\r\n                        return (\r\n                            <div className=\"card bg-light\" key={post._id} style={{ minWidth: \"15rem\" }}>\r\n                                <div className=\"card-body custom-card\">\r\n                                    <h4 className=\"custom-card-date\">\r\n                                        {`${day} ${month} ${year}`}\r\n\r\n                                        <span\r\n                                            onClick={() => this.deletePost(post._id)}\r\n                                            style={{ float: \"right\", cursor: \"pointer\", paddingLeft: \"10px\" }}\r\n                                            title=\"Delete\"\r\n                                        >\r\n                                            <svg\r\n                                                className=\"bi bi-trash-fill\"\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            >\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span\r\n                                            onClick={() => this.editPost(post._id)}\r\n                                            style={{ float: \"right\", cursor: \"pointer\" }}\r\n                                            title=\"Edit\"\r\n                                        >\r\n                                            <svg\r\n                                                className=\"bi bi-pencil\"\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            >\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"\r\n                                                />\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </h4>\r\n                                    <h5 className=\"card-title custom-card-header\">{post.postHeader}</h5>\r\n                                    <div className=\"card-text custom-card-content\">\r\n                                        <CKEditor\r\n                                            editor={ClassicEditor}\r\n                                            data={post.postContent}\r\n                                            disabled={true}\r\n                                            config={{\r\n                                                toolbar: [],\r\n                                            }}\r\n                                            onChange={(event, editor) => {\r\n                                                const data = editor.getData();\r\n                                                //console.log({ event, editor, data });\r\n                                                this.setState({\r\n                                                    postContent: data,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <MemorablePost memorablePost={post.memorablePost} />\r\n                                    <div className=\"custom-card-tags\">\r\n                                        {post.postHashtags.map((elem, i) => {\r\n                                            return (\r\n                                                <span\r\n                                                    className=\"badge badge-pill badge-info\"\r\n                                                    style={{ margin: \"2px 4px\", padding: \"5px\", borderRadius: \"5px\" }}\r\n                                                    key={i}\r\n                                                >\r\n                                                    #{elem}\r\n                                                </span>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    posts: state.post.posts,\r\n    showModal: state.post.showModal,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentUsersPosts, deletePost, shouldShowModal })(PostCards);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../../actions/postActions\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\r\n\r\nclass CreatePost extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            postHeader: \"\",\r\n            postContent: \"\",\r\n            postMood: {\r\n                happy: false,\r\n                sad: false,\r\n                funny: false,\r\n                tired: false,\r\n                bored: false,\r\n                love: false,\r\n                blessed: false,\r\n                crying: false,\r\n                angry: false,\r\n                calm: false,\r\n            },\r\n            postHashtags: [],\r\n            memorablePost: false,\r\n        };\r\n\r\n        this.postHeaderChange = this.postHeaderChange.bind(this);\r\n        this.postContentChange = this.postContentChange.bind(this);\r\n        this.memorablePostChange = this.memorablePostChange.bind(this);\r\n        this.handleHashtagsChange = this.handleHashtagsChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    postHeaderChange(e) {\r\n        this.setState({\r\n            postHeader: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleHashtagsChange(postHashtags) {\r\n        this.setState({ postHashtags });\r\n    }\r\n\r\n    postContentChange(e) {\r\n        this.setState({\r\n            postContent: e.target.value,\r\n        });\r\n\r\n        //console.log(this.state);\r\n    }\r\n\r\n    memorablePostChange(e) {\r\n        console.log(e.target);\r\n        this.setState({\r\n            memorablePost: e.target.checked,\r\n        });\r\n        //console.log(this.state.memorablePost);\r\n    }\r\n\r\n    onSubmit() {\r\n        this.props.createPost(this.state);\r\n        this.setState({\r\n            postHeader: \"\",\r\n            postContent: \"\",\r\n            postMood: {\r\n                happy: false,\r\n                sad: false,\r\n                funny: false,\r\n                tired: false,\r\n                bored: false,\r\n                love: false,\r\n                blessed: false,\r\n                crying: false,\r\n                angry: false,\r\n                calm: false,\r\n            },\r\n            postHashtags: [],\r\n            memorablePost: false,\r\n        });\r\n    }\r\n\r\n    inputProps() {\r\n        return {\r\n            placeholder: \"Hashtags\",\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid create-post-section\">\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-sm-4 create-post-left-section pad15\">\r\n                        <h3 style={{ display: \"inline-block\" }}> Hello {this.props.auth.user.name}, &nbsp; </h3>\r\n                        <h5 style={{ display: \"inline-block\" }}> Hope it was a good day </h5>\r\n                        <hr />\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder=\"Brief description of your day... !!\"\r\n                            value={this.state.postHeader}\r\n                            onChange={this.postHeaderChange}\r\n                            name=\"postHeader\"\r\n                        />\r\n\r\n                        <div className=\"row\" style={{ padding: \"15px 0\" }}>\r\n                            <div className=\"col-sm-12\" style={{ paddingTop: \"6px\", marginBottom: \"15px\" }}>\r\n                                <TagsInput\r\n                                    value={this.state.postHashtags}\r\n                                    onChange={this.handleHashtagsChange}\r\n                                    inputProps={this.inputProps()}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-control form-control-lg\"\r\n                                    checked={this.state.memorablePost}\r\n                                    onChange={this.memorablePostChange}\r\n                                    name=\"memorablePost\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-sm-10\" style={{ paddingTop: \"6px\" }}>\r\n                                <h4>Was today a memorable Day ?</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-8 create-post-right-section\">\r\n                        <CKEditor\r\n                            editor={ClassicEditor}\r\n                            data={this.state.postContent}\r\n                            config={{\r\n                                placeholder: \"Okay how good was your day !!\",\r\n                            }}\r\n                            onChange={(event, editor) => {\r\n                                const data = editor.getData();\r\n                                //console.log({ event, editor, data });\r\n                                this.setState({\r\n                                    postContent: data,\r\n                                });\r\n                            }}\r\n                        />\r\n\r\n                        {this.state.postHeader && this.state.postContent && (\r\n                            <button value=\"submit\" className=\"btn save-btn\" onClick={this.onSubmit}>\r\n                                Save\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    posts: state.post.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createPost })(CreatePost);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentUsersPosts } from \"../../actions/postActions\";\r\nimport PostCards from \"./PostCards\";\r\nimport CreatePost from \"./CreatePost\";\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            posts: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCurrentUsersPosts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid action-pages\">\r\n                <CreatePost user={this.props.user} />\r\n                <div className=\"card-deck\">\r\n                    <PostCards />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    posts: state.post.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentUsersPosts })(Home);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Home from \"./components/home/Home\";\n\nimport \"./App.css\";\n\nif (localStorage.jwtToken) {\n    // set the auth token header auth\n    setAuthToken(localStorage.jwtToken);\n    // decode token and get user info and export default\n    const decoded = jwt_decode(localStorage.jwtToken);\n    // set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n    // check for expired token\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = \"/login\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Navbar />\n                    <Route exact path=\"/\" component={Landing} />\n                    <div className=\"container-fluid\" style={{ padding: 0 }}>\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/home\" component={Home} />\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}